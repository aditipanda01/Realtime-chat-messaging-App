{"ast":null,"code":"/* eslint-disable */\nexport var KEY_CODES = {\n  ESC: 27,\n  UP: 38,\n  DOWN: 40,\n  ENTER: 13,\n  TAB: 9,\n  SPACE: 32\n};\nvar keycodeMap = {};\n// This is self-made key shortcuts manager, used for caching key strokes\nvar Listener = /** @class */function () {\n  function Listener() {\n    var _this = this;\n    this.startListen = function () {\n      if (!_this.refCount) {\n        // prevent multiple listeners in case of multiple TextareaAutocomplete components on page\n        document.addEventListener('keydown', _this.f);\n        document.addEventListener('keyup', _this.f);\n      }\n      _this.refCount++;\n    };\n    this.stopListen = function () {\n      _this.refCount--;\n      if (!_this.refCount) {\n        // prevent disable listening in case of multiple TextareaAutocomplete components on page\n        document.removeEventListener('keydown', _this.f);\n        document.removeEventListener('keyup', _this.f);\n      }\n    };\n    this.add = function (keyCodes, fn) {\n      var keyCode = keyCodes;\n      if (typeof keyCode !== 'object') keyCode = [keyCode];\n      _this.listeners[_this.index] = {\n        keyCode: keyCode,\n        fn: fn\n      };\n      _this.index += 1;\n      return _this.index;\n    };\n    this.remove = function (ids) {\n      for (var _i = 0, _a = Object.entries(ids); _i < _a.length; _i++) {\n        var key = _a[_i];\n        delete _this.listeners[key];\n      }\n    };\n    this.removeAll = function () {\n      _this.listeners = {};\n      _this.index = 0;\n    };\n    this.index = 0;\n    this.listeners = {};\n    this.refCount = 0;\n    this.f = function (e) {\n      var code = e.keyCode || e.which;\n      keycodeMap[code] = e.type === 'keydown';\n      if (e.type !== 'keydown') {\n        keycodeMap[code] = false;\n        return;\n      }\n      Object.values(_this.listeners).forEach(function (_a) {\n        var keyCode = _a.keyCode,\n          fn = _a.fn;\n        if (keyCode.length > 1) {\n          if (keyCode.every(function (keycode) {\n            return keycodeMap[keycode];\n          })) {\n            fn(e);\n          }\n        } else if (keyCode.includes(code) && keycodeMap[code]) {\n          fn(e);\n        }\n      });\n    };\n  }\n  return Listener;\n}();\nexport default new Listener();","map":{"version":3,"names":["KEY_CODES","ESC","UP","DOWN","ENTER","TAB","SPACE","keycodeMap","Listener","_this","startListen","refCount","document","addEventListener","f","stopListen","removeEventListener","add","keyCodes","fn","keyCode","listeners","index","remove","ids","_i","_a","Object","entries","length","key","removeAll","e","code","which","type","values","forEach","every","keycode","includes"],"sources":["C:/Users/HP/Desktop/project_medical_pager_chat-master/node_modules/stream-chat-react/dist/components/AutoCompleteTextarea/listener.js"],"sourcesContent":["/* eslint-disable */\nexport var KEY_CODES = {\n    ESC: 27,\n    UP: 38,\n    DOWN: 40,\n    ENTER: 13,\n    TAB: 9,\n    SPACE: 32,\n};\nvar keycodeMap = {};\n// This is self-made key shortcuts manager, used for caching key strokes\nvar Listener = /** @class */ (function () {\n    function Listener() {\n        var _this = this;\n        this.startListen = function () {\n            if (!_this.refCount) {\n                // prevent multiple listeners in case of multiple TextareaAutocomplete components on page\n                document.addEventListener('keydown', _this.f);\n                document.addEventListener('keyup', _this.f);\n            }\n            _this.refCount++;\n        };\n        this.stopListen = function () {\n            _this.refCount--;\n            if (!_this.refCount) {\n                // prevent disable listening in case of multiple TextareaAutocomplete components on page\n                document.removeEventListener('keydown', _this.f);\n                document.removeEventListener('keyup', _this.f);\n            }\n        };\n        this.add = function (keyCodes, fn) {\n            var keyCode = keyCodes;\n            if (typeof keyCode !== 'object')\n                keyCode = [keyCode];\n            _this.listeners[_this.index] = {\n                keyCode: keyCode,\n                fn: fn,\n            };\n            _this.index += 1;\n            return _this.index;\n        };\n        this.remove = function (ids) {\n            for (var _i = 0, _a = Object.entries(ids); _i < _a.length; _i++) {\n                var key = _a[_i];\n                delete _this.listeners[key];\n            }\n        };\n        this.removeAll = function () {\n            _this.listeners = {};\n            _this.index = 0;\n        };\n        this.index = 0;\n        this.listeners = {};\n        this.refCount = 0;\n        this.f = function (e) {\n            var code = e.keyCode || e.which;\n            keycodeMap[code] = e.type === 'keydown';\n            if (e.type !== 'keydown') {\n                keycodeMap[code] = false;\n                return;\n            }\n            Object.values(_this.listeners).forEach(function (_a) {\n                var keyCode = _a.keyCode, fn = _a.fn;\n                if (keyCode.length > 1) {\n                    if (keyCode.every(function (keycode) { return keycodeMap[keycode]; })) {\n                        fn(e);\n                    }\n                }\n                else if (keyCode.includes(code) && keycodeMap[code]) {\n                    fn(e);\n                }\n            });\n        };\n    }\n    return Listener;\n}());\nexport default new Listener();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}