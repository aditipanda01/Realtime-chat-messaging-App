{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport React, { useEffect, useState } from 'react';\nimport { ChannelPreviewMessenger } from './ChannelPreviewMessenger';\nimport { useIsChannelMuted } from './hooks/useIsChannelMuted';\nimport { getDisplayImage, getDisplayTitle, getLatestMessagePreview } from './utils';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport var ChannelPreview = function (props) {\n  var channel = props.channel,\n    _a = props.Preview,\n    Preview = _a === void 0 ? ChannelPreviewMessenger : _a;\n  var _b = useChatContext('ChannelPreview'),\n    activeChannel = _b.channel,\n    client = _b.client,\n    setActiveChannel = _b.setActiveChannel;\n  var _c = useTranslationContext('ChannelPreview'),\n    t = _c.t,\n    userLanguage = _c.userLanguage;\n  var _d = useState(channel.state.messages[channel.state.messages.length - 1]),\n    lastMessage = _d[0],\n    setLastMessage = _d[1];\n  var _e = useState(0),\n    unread = _e[0],\n    setUnread = _e[1];\n  var isActive = (activeChannel === null || activeChannel === void 0 ? void 0 : activeChannel.cid) === channel.cid;\n  var muted = useIsChannelMuted(channel).muted;\n  useEffect(function () {\n    var handleEvent = function (event) {\n      if (!event.cid) return setUnread(0);\n      if (channel.cid === event.cid) setUnread(0);\n    };\n    client.on('notification.mark_read', handleEvent);\n    return function () {\n      return client.off('notification.mark_read', handleEvent);\n    };\n  }, []);\n  useEffect(function () {\n    if (isActive || muted) {\n      setUnread(0);\n    } else {\n      setUnread(channel.countUnread());\n    }\n  }, [channel, isActive, muted]);\n  useEffect(function () {\n    var handleEvent = function (event) {\n      if (event.message) setLastMessage(event.message);\n      if (!isActive && !muted) {\n        setUnread(channel.countUnread());\n      } else {\n        setUnread(0);\n      }\n    };\n    channel.on('message.new', handleEvent);\n    channel.on('message.updated', handleEvent);\n    channel.on('message.deleted', handleEvent);\n    return function () {\n      channel.off('message.new', handleEvent);\n      channel.off('message.updated', handleEvent);\n      channel.off('message.deleted', handleEvent);\n    };\n  }, [channel, isActive, muted]);\n  if (!Preview) return null;\n  var displayImage = getDisplayImage(channel, client.user);\n  var displayTitle = getDisplayTitle(channel, client.user);\n  var latestMessage = getLatestMessagePreview(channel, t, userLanguage);\n  return React.createElement(Preview, __assign({}, props, {\n    active: isActive,\n    displayImage: displayImage,\n    displayTitle: displayTitle,\n    lastMessage: lastMessage,\n    latestMessage: latestMessage,\n    setActiveChannel: setActiveChannel,\n    unread: unread\n  }));\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","React","useEffect","useState","ChannelPreviewMessenger","useIsChannelMuted","getDisplayImage","getDisplayTitle","getLatestMessagePreview","useChatContext","useTranslationContext","ChannelPreview","props","channel","_a","Preview","_b","activeChannel","client","setActiveChannel","_c","userLanguage","_d","state","messages","lastMessage","setLastMessage","_e","unread","setUnread","isActive","cid","muted","handleEvent","event","on","off","countUnread","message","displayImage","user","displayTitle","latestMessage","createElement","active"],"sources":["C:/Users/HP/Desktop/project_medical_pager_chat-master/node_modules/stream-chat-react/dist/components/ChannelPreview/ChannelPreview.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useEffect, useState } from 'react';\nimport { ChannelPreviewMessenger } from './ChannelPreviewMessenger';\nimport { useIsChannelMuted } from './hooks/useIsChannelMuted';\nimport { getDisplayImage, getDisplayTitle, getLatestMessagePreview } from './utils';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useTranslationContext } from '../../context/TranslationContext';\nexport var ChannelPreview = function (props) {\n    var channel = props.channel, _a = props.Preview, Preview = _a === void 0 ? ChannelPreviewMessenger : _a;\n    var _b = useChatContext('ChannelPreview'), activeChannel = _b.channel, client = _b.client, setActiveChannel = _b.setActiveChannel;\n    var _c = useTranslationContext('ChannelPreview'), t = _c.t, userLanguage = _c.userLanguage;\n    var _d = useState(channel.state.messages[channel.state.messages.length - 1]), lastMessage = _d[0], setLastMessage = _d[1];\n    var _e = useState(0), unread = _e[0], setUnread = _e[1];\n    var isActive = (activeChannel === null || activeChannel === void 0 ? void 0 : activeChannel.cid) === channel.cid;\n    var muted = useIsChannelMuted(channel).muted;\n    useEffect(function () {\n        var handleEvent = function (event) {\n            if (!event.cid)\n                return setUnread(0);\n            if (channel.cid === event.cid)\n                setUnread(0);\n        };\n        client.on('notification.mark_read', handleEvent);\n        return function () { return client.off('notification.mark_read', handleEvent); };\n    }, []);\n    useEffect(function () {\n        if (isActive || muted) {\n            setUnread(0);\n        }\n        else {\n            setUnread(channel.countUnread());\n        }\n    }, [channel, isActive, muted]);\n    useEffect(function () {\n        var handleEvent = function (event) {\n            if (event.message)\n                setLastMessage(event.message);\n            if (!isActive && !muted) {\n                setUnread(channel.countUnread());\n            }\n            else {\n                setUnread(0);\n            }\n        };\n        channel.on('message.new', handleEvent);\n        channel.on('message.updated', handleEvent);\n        channel.on('message.deleted', handleEvent);\n        return function () {\n            channel.off('message.new', handleEvent);\n            channel.off('message.updated', handleEvent);\n            channel.off('message.deleted', handleEvent);\n        };\n    }, [channel, isActive, muted]);\n    if (!Preview)\n        return null;\n    var displayImage = getDisplayImage(channel, client.user);\n    var displayTitle = getDisplayTitle(channel, client.user);\n    var latestMessage = getLatestMessagePreview(channel, t, userLanguage);\n    return (React.createElement(Preview, __assign({}, props, { active: isActive, displayImage: displayImage, displayTitle: displayTitle, lastMessage: lastMessage, latestMessage: latestMessage, setActiveChannel: setActiveChannel, unread: unread })));\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}