{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nimport { useCallback, useReducer, useState } from 'react';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nimport { generateRandomId } from '../../../utils';\nimport { useEmojiIndex } from './useEmojiIndex';\nimport { useAttachments } from './useAttachments';\nimport { useMessageInputText } from './useMessageInputText';\nimport { useEmojiPicker } from './useEmojiPicker';\nimport { useSubmitHandler } from './useSubmitHandler';\nimport { usePasteHandler } from './usePasteHandler';\nvar emptyFileUploads = {};\nvar emptyImageUploads = {};\n/**\n * Initializes the state. Empty if the message prop is falsy.\n */\nvar initState = function (message) {\n  var _a, _b, _c;\n  if (!message) {\n    return {\n      attachments: [],\n      emojiPickerIsOpen: false,\n      fileOrder: [],\n      fileUploads: __assign({}, emptyFileUploads),\n      imageOrder: [],\n      imageUploads: __assign({}, emptyImageUploads),\n      mentioned_users: [],\n      setText: function () {\n        return null;\n      },\n      text: ''\n    };\n  }\n  // if message prop is defined, get image uploads, file uploads, text, etc.\n  var imageUploads = ((_a = message.attachments) === null || _a === void 0 ? void 0 : _a.filter(function (_a) {\n    var type = _a.type;\n    return type === 'image';\n  }).reduce(function (acc, attachment) {\n    var id = generateRandomId();\n    acc[id] = {\n      file: {\n        name: attachment.fallback || ''\n      },\n      id: id,\n      state: 'finished',\n      url: attachment.image_url\n    };\n    return acc;\n  }, {})) || {};\n  var imageOrder = Object.keys(imageUploads);\n  var fileUploads = ((_b = message.attachments) === null || _b === void 0 ? void 0 : _b.filter(function (_a) {\n    var type = _a.type;\n    return type === 'file';\n  }).reduce(function (acc, attachment) {\n    var id = generateRandomId();\n    acc[id] = {\n      file: {\n        name: attachment.title || '',\n        size: attachment.file_size,\n        type: attachment.mime_type\n      },\n      id: id,\n      state: 'finished',\n      url: attachment.asset_url\n    };\n    return acc;\n  }, {})) || {};\n  var fileOrder = Object.keys(fileUploads);\n  var attachments = ((_c = message.attachments) === null || _c === void 0 ? void 0 : _c.filter(function (_a) {\n    var type = _a.type;\n    return type !== 'file' && type !== 'image';\n  })) || [];\n  var mentioned_users = message.mentioned_users || [];\n  return {\n    attachments: attachments,\n    emojiPickerIsOpen: false,\n    fileOrder: fileOrder,\n    fileUploads: fileUploads,\n    imageOrder: imageOrder,\n    imageUploads: imageUploads,\n    mentioned_users: mentioned_users,\n    setText: function () {\n      return null;\n    },\n    text: message.text || ''\n  };\n};\n/**\n * MessageInput state reducer\n */\nvar messageInputReducer = function (state, action) {\n  var _a, _b;\n  switch (action.type) {\n    case 'setEmojiPickerIsOpen':\n      return __assign(__assign({}, state), {\n        emojiPickerIsOpen: action.value\n      });\n    case 'setText':\n      return __assign(__assign({}, state), {\n        text: action.getNewText(state.text)\n      });\n    case 'clear':\n      return {\n        attachments: [],\n        emojiPickerIsOpen: false,\n        fileOrder: [],\n        fileUploads: __assign({}, emptyFileUploads),\n        imageOrder: [],\n        imageUploads: __assign({}, emptyImageUploads),\n        mentioned_users: [],\n        text: ''\n      };\n    case 'setImageUpload':\n      {\n        var imageAlreadyExists = state.imageUploads[action.id];\n        if (!imageAlreadyExists && !action.file) return state;\n        var imageOrder = imageAlreadyExists ? state.imageOrder : state.imageOrder.concat(action.id);\n        var newUploadFields = __assign({}, action);\n        delete newUploadFields.type;\n        return __assign(__assign({}, state), {\n          imageOrder: imageOrder,\n          imageUploads: __assign(__assign({}, state.imageUploads), (_a = {}, _a[action.id] = __assign(__assign({}, state.imageUploads[action.id]), newUploadFields), _a))\n        });\n      }\n    case 'setFileUpload':\n      {\n        var fileAlreadyExists = state.fileUploads[action.id];\n        if (!fileAlreadyExists && !action.file) return state;\n        var fileOrder = fileAlreadyExists ? state.fileOrder : state.fileOrder.concat(action.id);\n        var newUploadFields = __assign({}, action);\n        delete newUploadFields.type;\n        return __assign(__assign({}, state), {\n          fileOrder: fileOrder,\n          fileUploads: __assign(__assign({}, state.fileUploads), (_b = {}, _b[action.id] = __assign(__assign({}, state.fileUploads[action.id]), newUploadFields), _b))\n        });\n      }\n    case 'removeImageUpload':\n      {\n        if (!state.imageUploads[action.id]) return state; // cannot remove anything\n        var newImageUploads = __assign({}, state.imageUploads);\n        delete newImageUploads[action.id];\n        return __assign(__assign({}, state), {\n          imageOrder: state.imageOrder.filter(function (_id) {\n            return _id !== action.id;\n          }),\n          imageUploads: newImageUploads\n        });\n      }\n    case 'removeFileUpload':\n      {\n        if (!state.fileUploads[action.id]) return state; // cannot remove anything\n        var newFileUploads = __assign({}, state.fileUploads);\n        delete newFileUploads[action.id];\n        return __assign(__assign({}, state), {\n          fileOrder: state.fileOrder.filter(function (_id) {\n            return _id !== action.id;\n          }),\n          fileUploads: newFileUploads\n        });\n      }\n    case 'addMentionedUser':\n      return __assign(__assign({}, state), {\n        mentioned_users: state.mentioned_users.concat(action.user)\n      });\n    default:\n      return state;\n  }\n};\n/**\n * hook for MessageInput state\n */\nexport var useMessageInputState = function (props) {\n  var closeEmojiPickerOnClick = props.closeEmojiPickerOnClick,\n    message = props.message;\n  var _a = useChannelStateContext('useMessageInputState'),\n    _b = _a.channelCapabilities,\n    channelCapabilities = _b === void 0 ? {} : _b,\n    channelConfig = _a.channelConfig;\n  var _c = useReducer(messageInputReducer, message, initState),\n    state = _c[0],\n    dispatch = _c[1];\n  var _d = useMessageInputText(props, state, dispatch),\n    handleChange = _d.handleChange,\n    insertText = _d.insertText,\n    textareaRef = _d.textareaRef;\n  var _e = useState(false),\n    showCommandsList = _e[0],\n    setShowCommandsList = _e[1];\n  var _f = useState(false),\n    showMentionsList = _f[0],\n    setShowMentionsList = _f[1];\n  var openCommandsList = function () {\n    dispatch({\n      getNewText: function () {\n        return '/';\n      },\n      type: 'setText'\n    });\n    setShowCommandsList(true);\n  };\n  var closeCommandsList = function () {\n    return setShowCommandsList(false);\n  };\n  var openMentionsList = function () {\n    dispatch({\n      getNewText: function (currentText) {\n        return currentText + '@';\n      },\n      type: 'setText'\n    });\n    setShowMentionsList(true);\n  };\n  var closeMentionsList = function () {\n    return setShowMentionsList(false);\n  };\n  var _g = useEmojiPicker(state, dispatch, insertText, textareaRef, closeEmojiPickerOnClick),\n    closeEmojiPicker = _g.closeEmojiPicker,\n    emojiPickerRef = _g.emojiPickerRef,\n    handleEmojiKeyDown = _g.handleEmojiKeyDown,\n    onSelectEmoji = _g.onSelectEmoji,\n    openEmojiPicker = _g.openEmojiPicker;\n  var _h = useAttachments(props, state, dispatch, textareaRef),\n    maxFilesLeft = _h.maxFilesLeft,\n    numberOfUploads = _h.numberOfUploads,\n    removeFile = _h.removeFile,\n    removeImage = _h.removeImage,\n    uploadFile = _h.uploadFile,\n    uploadImage = _h.uploadImage,\n    uploadNewFiles = _h.uploadNewFiles;\n  var handleSubmit = useSubmitHandler(props, state, dispatch, numberOfUploads).handleSubmit;\n  var onPaste = usePasteHandler(uploadNewFiles, insertText).onPaste;\n  var isUploadEnabled = (channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.uploads) !== false && channelCapabilities['upload-file'] !== false;\n  var onSelectUser = useCallback(function (item) {\n    dispatch({\n      type: 'addMentionedUser',\n      user: item\n    });\n  }, []);\n  var setText = useCallback(function (text) {\n    dispatch({\n      getNewText: function () {\n        return text;\n      },\n      type: 'setText'\n    });\n  }, []);\n  return __assign(__assign({}, state), {\n    closeCommandsList: closeCommandsList,\n    /**\n     * TODO: fix the below at some point because this type casting is wrong\n     * and just forced to not have warnings currently with the unknown casting\n     */\n    closeEmojiPicker: closeEmojiPicker,\n    closeMentionsList: closeMentionsList,\n    emojiIndex: useEmojiIndex(),\n    emojiPickerRef: emojiPickerRef,\n    handleChange: handleChange,\n    handleEmojiKeyDown: handleEmojiKeyDown,\n    handleSubmit: handleSubmit,\n    insertText: insertText,\n    isUploadEnabled: isUploadEnabled,\n    maxFilesLeft: maxFilesLeft,\n    numberOfUploads: numberOfUploads,\n    onPaste: onPaste,\n    onSelectEmoji: onSelectEmoji,\n    onSelectUser: onSelectUser,\n    openCommandsList: openCommandsList,\n    openEmojiPicker: openEmojiPicker,\n    openMentionsList: openMentionsList,\n    removeFile: removeFile,\n    removeImage: removeImage,\n    setText: setText,\n    showCommandsList: showCommandsList,\n    showMentionsList: showMentionsList,\n    textareaRef: textareaRef,\n    uploadFile: uploadFile,\n    uploadImage: uploadImage,\n    uploadNewFiles: uploadNewFiles\n  });\n};","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","useCallback","useReducer","useState","useChannelStateContext","generateRandomId","useEmojiIndex","useAttachments","useMessageInputText","useEmojiPicker","useSubmitHandler","usePasteHandler","emptyFileUploads","emptyImageUploads","initState","message","_a","_b","_c","attachments","emojiPickerIsOpen","fileOrder","fileUploads","imageOrder","imageUploads","mentioned_users","setText","text","filter","type","reduce","acc","attachment","id","file","name","fallback","state","url","image_url","keys","title","size","file_size","mime_type","asset_url","messageInputReducer","action","value","getNewText","imageAlreadyExists","concat","newUploadFields","fileAlreadyExists","newImageUploads","_id","newFileUploads","user","useMessageInputState","props","closeEmojiPickerOnClick","channelCapabilities","channelConfig","dispatch","_d","handleChange","insertText","textareaRef","_e","showCommandsList","setShowCommandsList","_f","showMentionsList","setShowMentionsList","openCommandsList","closeCommandsList","openMentionsList","currentText","closeMentionsList","_g","closeEmojiPicker","emojiPickerRef","handleEmojiKeyDown","onSelectEmoji","openEmojiPicker","_h","maxFilesLeft","numberOfUploads","removeFile","removeImage","uploadFile","uploadImage","uploadNewFiles","handleSubmit","onPaste","isUploadEnabled","uploads","onSelectUser","item","emojiIndex"],"sources":["C:/Users/HP/Desktop/project_medical_pager_chat-master/node_modules/stream-chat-react/dist/components/MessageInput/hooks/useMessageInputState.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useCallback, useReducer, useState } from 'react';\nimport { useChannelStateContext } from '../../../context/ChannelStateContext';\nimport { generateRandomId } from '../../../utils';\nimport { useEmojiIndex } from './useEmojiIndex';\nimport { useAttachments } from './useAttachments';\nimport { useMessageInputText } from './useMessageInputText';\nimport { useEmojiPicker } from './useEmojiPicker';\nimport { useSubmitHandler } from './useSubmitHandler';\nimport { usePasteHandler } from './usePasteHandler';\nvar emptyFileUploads = {};\nvar emptyImageUploads = {};\n/**\n * Initializes the state. Empty if the message prop is falsy.\n */\nvar initState = function (message) {\n    var _a, _b, _c;\n    if (!message) {\n        return {\n            attachments: [],\n            emojiPickerIsOpen: false,\n            fileOrder: [],\n            fileUploads: __assign({}, emptyFileUploads),\n            imageOrder: [],\n            imageUploads: __assign({}, emptyImageUploads),\n            mentioned_users: [],\n            setText: function () { return null; },\n            text: '',\n        };\n    }\n    // if message prop is defined, get image uploads, file uploads, text, etc.\n    var imageUploads = ((_a = message.attachments) === null || _a === void 0 ? void 0 : _a.filter(function (_a) {\n        var type = _a.type;\n        return type === 'image';\n    }).reduce(function (acc, attachment) {\n        var id = generateRandomId();\n        acc[id] = {\n            file: {\n                name: attachment.fallback || '',\n            },\n            id: id,\n            state: 'finished',\n            url: attachment.image_url,\n        };\n        return acc;\n    }, {})) || {};\n    var imageOrder = Object.keys(imageUploads);\n    var fileUploads = ((_b = message.attachments) === null || _b === void 0 ? void 0 : _b.filter(function (_a) {\n        var type = _a.type;\n        return type === 'file';\n    }).reduce(function (acc, attachment) {\n        var id = generateRandomId();\n        acc[id] = {\n            file: {\n                name: attachment.title || '',\n                size: attachment.file_size,\n                type: attachment.mime_type,\n            },\n            id: id,\n            state: 'finished',\n            url: attachment.asset_url,\n        };\n        return acc;\n    }, {})) || {};\n    var fileOrder = Object.keys(fileUploads);\n    var attachments = ((_c = message.attachments) === null || _c === void 0 ? void 0 : _c.filter(function (_a) {\n        var type = _a.type;\n        return type !== 'file' && type !== 'image';\n    })) || [];\n    var mentioned_users = message.mentioned_users || [];\n    return {\n        attachments: attachments,\n        emojiPickerIsOpen: false,\n        fileOrder: fileOrder,\n        fileUploads: fileUploads,\n        imageOrder: imageOrder,\n        imageUploads: imageUploads,\n        mentioned_users: mentioned_users,\n        setText: function () { return null; },\n        text: message.text || '',\n    };\n};\n/**\n * MessageInput state reducer\n */\nvar messageInputReducer = function (state, action) {\n    var _a, _b;\n    switch (action.type) {\n        case 'setEmojiPickerIsOpen':\n            return __assign(__assign({}, state), { emojiPickerIsOpen: action.value });\n        case 'setText':\n            return __assign(__assign({}, state), { text: action.getNewText(state.text) });\n        case 'clear':\n            return {\n                attachments: [],\n                emojiPickerIsOpen: false,\n                fileOrder: [],\n                fileUploads: __assign({}, emptyFileUploads),\n                imageOrder: [],\n                imageUploads: __assign({}, emptyImageUploads),\n                mentioned_users: [],\n                text: '',\n            };\n        case 'setImageUpload': {\n            var imageAlreadyExists = state.imageUploads[action.id];\n            if (!imageAlreadyExists && !action.file)\n                return state;\n            var imageOrder = imageAlreadyExists ? state.imageOrder : state.imageOrder.concat(action.id);\n            var newUploadFields = __assign({}, action);\n            delete newUploadFields.type;\n            return __assign(__assign({}, state), { imageOrder: imageOrder, imageUploads: __assign(__assign({}, state.imageUploads), (_a = {}, _a[action.id] = __assign(__assign({}, state.imageUploads[action.id]), newUploadFields), _a)) });\n        }\n        case 'setFileUpload': {\n            var fileAlreadyExists = state.fileUploads[action.id];\n            if (!fileAlreadyExists && !action.file)\n                return state;\n            var fileOrder = fileAlreadyExists ? state.fileOrder : state.fileOrder.concat(action.id);\n            var newUploadFields = __assign({}, action);\n            delete newUploadFields.type;\n            return __assign(__assign({}, state), { fileOrder: fileOrder, fileUploads: __assign(__assign({}, state.fileUploads), (_b = {}, _b[action.id] = __assign(__assign({}, state.fileUploads[action.id]), newUploadFields), _b)) });\n        }\n        case 'removeImageUpload': {\n            if (!state.imageUploads[action.id])\n                return state; // cannot remove anything\n            var newImageUploads = __assign({}, state.imageUploads);\n            delete newImageUploads[action.id];\n            return __assign(__assign({}, state), { imageOrder: state.imageOrder.filter(function (_id) { return _id !== action.id; }), imageUploads: newImageUploads });\n        }\n        case 'removeFileUpload': {\n            if (!state.fileUploads[action.id])\n                return state; // cannot remove anything\n            var newFileUploads = __assign({}, state.fileUploads);\n            delete newFileUploads[action.id];\n            return __assign(__assign({}, state), { fileOrder: state.fileOrder.filter(function (_id) { return _id !== action.id; }), fileUploads: newFileUploads });\n        }\n        case 'addMentionedUser':\n            return __assign(__assign({}, state), { mentioned_users: state.mentioned_users.concat(action.user) });\n        default:\n            return state;\n    }\n};\n/**\n * hook for MessageInput state\n */\nexport var useMessageInputState = function (props) {\n    var closeEmojiPickerOnClick = props.closeEmojiPickerOnClick, message = props.message;\n    var _a = useChannelStateContext('useMessageInputState'), _b = _a.channelCapabilities, channelCapabilities = _b === void 0 ? {} : _b, channelConfig = _a.channelConfig;\n    var _c = useReducer(messageInputReducer, message, initState), state = _c[0], dispatch = _c[1];\n    var _d = useMessageInputText(props, state, dispatch), handleChange = _d.handleChange, insertText = _d.insertText, textareaRef = _d.textareaRef;\n    var _e = useState(false), showCommandsList = _e[0], setShowCommandsList = _e[1];\n    var _f = useState(false), showMentionsList = _f[0], setShowMentionsList = _f[1];\n    var openCommandsList = function () {\n        dispatch({\n            getNewText: function () { return '/'; },\n            type: 'setText',\n        });\n        setShowCommandsList(true);\n    };\n    var closeCommandsList = function () { return setShowCommandsList(false); };\n    var openMentionsList = function () {\n        dispatch({\n            getNewText: function (currentText) { return currentText + '@'; },\n            type: 'setText',\n        });\n        setShowMentionsList(true);\n    };\n    var closeMentionsList = function () { return setShowMentionsList(false); };\n    var _g = useEmojiPicker(state, dispatch, insertText, textareaRef, closeEmojiPickerOnClick), closeEmojiPicker = _g.closeEmojiPicker, emojiPickerRef = _g.emojiPickerRef, handleEmojiKeyDown = _g.handleEmojiKeyDown, onSelectEmoji = _g.onSelectEmoji, openEmojiPicker = _g.openEmojiPicker;\n    var _h = useAttachments(props, state, dispatch, textareaRef), maxFilesLeft = _h.maxFilesLeft, numberOfUploads = _h.numberOfUploads, removeFile = _h.removeFile, removeImage = _h.removeImage, uploadFile = _h.uploadFile, uploadImage = _h.uploadImage, uploadNewFiles = _h.uploadNewFiles;\n    var handleSubmit = useSubmitHandler(props, state, dispatch, numberOfUploads).handleSubmit;\n    var onPaste = usePasteHandler(uploadNewFiles, insertText).onPaste;\n    var isUploadEnabled = (channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.uploads) !== false && channelCapabilities['upload-file'] !== false;\n    var onSelectUser = useCallback(function (item) {\n        dispatch({ type: 'addMentionedUser', user: item });\n    }, []);\n    var setText = useCallback(function (text) {\n        dispatch({ getNewText: function () { return text; }, type: 'setText' });\n    }, []);\n    return __assign(__assign({}, state), { closeCommandsList: closeCommandsList, \n        /**\n         * TODO: fix the below at some point because this type casting is wrong\n         * and just forced to not have warnings currently with the unknown casting\n         */\n        closeEmojiPicker: closeEmojiPicker, closeMentionsList: closeMentionsList, emojiIndex: useEmojiIndex(), emojiPickerRef: emojiPickerRef, handleChange: handleChange, handleEmojiKeyDown: handleEmojiKeyDown, handleSubmit: handleSubmit, insertText: insertText, isUploadEnabled: isUploadEnabled, maxFilesLeft: maxFilesLeft, numberOfUploads: numberOfUploads, onPaste: onPaste, onSelectEmoji: onSelectEmoji, onSelectUser: onSelectUser, openCommandsList: openCommandsList, openEmojiPicker: openEmojiPicker, openMentionsList: openMentionsList, removeFile: removeFile, removeImage: removeImage, setText: setText, showCommandsList: showCommandsList, showMentionsList: showMentionsList, textareaRef: textareaRef, uploadFile: uploadFile, uploadImage: uploadImage, uploadNewFiles: uploadNewFiles });\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}